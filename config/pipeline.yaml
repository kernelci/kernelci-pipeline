# SPDX-License-Identifier: LGPL-2.1-or-later
#
# Copyright (C) 2021, 2022, 2023 Collabora Limited
# Author: Guillaume Tucker <guillaume.tucker@collabora.com>

# Not directly loaded into the config, only used for YAML aliases in this file
_anchors:

  checkout: &checkout-event
    channel: node
    name: checkout
    state: available


api:

  docker-host:
    url: http://172.17.0.1:8001

  staging:
    url: https://staging.kernelci.org:9000

  early-access:
    url: https://kernelci-api.eastus.cloudapp.azure.com

  k8s-host:
    url: http://kernelci-api:8001


storage:

  docker-host:
    storage_type: ssh
    host: 172.17.0.1
    port: 8022
    base_url: http://172.17.0.1:8002/

  staging:
    storage_type: ssh
    host: staging.kernelci.org
    port: 9022
    base_url: http://storage.staging.kernelci.org/api/

  k8s-host:
    storage_type: ssh
    host: kernelci-api-ssh
    port: 8022
    base_url: http://kernelci-api-storage:8002/

  staging-azure: &azure-files
    storage_type: azure
    base_url: https://kciapistagingstorage1.file.core.windows.net/
    share: staging
    sas_public_token: "?sv=2022-11-02&ss=f&srt=sco&sp=r&se=2024-10-17T19:19:12Z&st=2023-10-17T11:19:12Z&spr=https&sig=sLmFlvZHXRrZsSGubsDUIvTiv%2BtzgDq6vALfkrtWnv8%3D"

  early-access-azure:
    <<: *azure-files
    share: early-access

runtimes:

  docker:
    lab_type: docker
    env_file: '/home/kernelci/.docker-env'
    user: 'root'  # Docker-in-Docker
    volumes:
      # Note: Absolute paths on the host are required here
      - 'data/ssh/:/home/kernelci/data/ssh'
      - 'data/output/:/home/kernelci/data/output'

  k8s-gke-eu-west4:
    lab_type: kubernetes
    context: 'gke_android-kernelci-external_europe-west4-c_kci-eu-west4'

  lava-collabora: &lava-collabora-staging
    lab_type: lava
    url: https://lava.collabora.dev/
    priority_min: 40
    priority_max: 60
    notify:
      callback:
        token: kernelci-api-token-staging
        url: https://staging.kernelci.org:9100

  # ToDo: avoid creating a separate Runtime entry
  # https://github.com/kernelci/kernelci-core/issues/2088
  lava-collabora-early-access:
    <<: *lava-collabora-staging
    notify:
      callback:
        token: kernelci-api-token-early-access
        url: https://staging.kernelci.org:9100

  shell:
    lab_type: shell


jobs:

  # FIXME This will need to be reworked later when the fstests scheduler has
  # been removed
  #
  # fstests:
  #   template: 'fstests.jinja2'
  #   image: 'kernelci/staging-kernelci'

  baseline-x86: &baseline-x86-job
    template: baseline.jinja2

  baseline-x86-board:
    <<: *baseline-x86-job

  kbuild-gcc-10-x86:
    template: kbuild.jinja2
    image: kernelci/staging-gcc-10:x86-kselftest-kernelci
    params:
      arch: x86_64
      compiler: gcc-10
      defconfig: x86_64_defconfig

  kbuild-gcc-10-x86-board:
    template: kbuild.jinja2
    image: kernelci/staging-gcc-10:x86-kselftest-kernelci
    params:
      arch: x86_64
      compiler: gcc-10
      defconfig: x86_64_defconfig
      fragments: ['x86-board']

  kbuild-gcc-10-x86-chromeos:
    template: kbuild.jinja2
    image: kernelci/staging-gcc-10:x86-kselftest-kernelci
    params:
      arch: x86_64
      compiler: gcc-10
      defconfig: allnoconfig
      fragments: ['x86-board','cros://chromeos-6.1/x86_64/chromeos-intel-pineview.flavour.config','CONFIG_MODULE_COMPRESS=n']

  kunit: &kunit-job
    template: kunit.jinja2
    image: kernelci/staging-gcc-10:x86-kunit-kernelci

  kunit-x86_64:
    <<: *kunit-job
    params:
      arch: x86_64

  kver:
    template: kver.jinja2
    image: kernelci/staging-kernelci


trees:

  kernelci:
    url: "https://github.com/kernelci/linux.git"

  mainline:
    url: 'https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git'


device_types:

  docker:
    base_name: docker
    class: docker

  qemu-x86:
    base_name: qemu
    arch: x86_64
    boot_method: qemu
    mach: qemu

  minnowboard-turbot-E3826:
    arch: x86_64
    boot_method: grub
    mach: x86

  aaeon-UPN-EHLX4RE-A10-0864:
    arch: x86_64
    boot_method: grub
    mach: x86

  asus-cx9400-volteer:
    arch: x86_64
    boot_method: depthcharge
    mach: x86

  kubernetes:
    base_name: kubernetes
    class: kubernetes

  shell:
    base_name: shell
    class: shell


scheduler:

  - job: baseline-x86
    event:
      channel: node
      name: kbuild-gcc-10-x86
      result: pass
    runtime:
      type: lava
    platforms:
      - qemu-x86
      - minnowboard-turbot-E3826

  - job: baseline-x86-board
    event:
      channel: node
      name: kbuild-gcc-10-x86-board
      result: pass
    runtime:
      type: lava
    platforms:
      - asus-cx9400-volteer

  - job: kbuild-gcc-10-x86
    event: *checkout-event
    runtime:
      type: kubernetes

  - job: kbuild-gcc-10-x86-board
    event: *checkout-event
    runtime:
      type: kubernetes

  - job: kbuild-gcc-10-x86-chromeos
    event: *checkout-event
    runtime:
      type: kubernetes

  - job: kunit
    event: *checkout-event
    runtime:
      type: docker

  - job: kunit-x86_64
    event: *checkout-event
    runtime:
      name: k8s-gke-eu-west4

  - job: kver
    event: *checkout-event
    runtime:
      type: shell

# -----------------------------------------------------------------------------
# Legacy configuration data (still used by trigger service)
#

build_environments:

  gcc-10:
    cc: gcc
    cc_version: 10
    arch_params:
      x86_64:
        name: 'x86'


build_variants:
  variants: &build-variants
    gcc-10:
      build_environment: gcc-10
      architectures:
        x86_64:
          base_defconfig: 'x86_64_defconfig'
          filters:
            - regex: { defconfig: 'x86_64_defconfig' }


build_configs:

  kernelci_staging-mainline:
    tree: kernelci
    branch: 'staging-mainline'
    variants: *build-variants

  kernelci_staging-next:
    tree: kernelci
    branch: 'staging-next'
    variants: *build-variants

  kernelci_staging-stable:
    tree: kernelci
    branch: 'staging-stable'
    variants: *build-variants

  mainline:
    tree: mainline
    branch: 'master'
    variants: *build-variants
