# SPDX-License-Identifier: LGPL-2.1-or-later
#
# Copyright (C) 2021, 2022, 2023 Collabora Limited
# Author: Guillaume Tucker <guillaume.tucker@collabora.com>

# Not directly loaded into the config, only used for YAML aliases in this file
_anchors:

  arm64-device: &arm64-device
    arch: arm64
    boot_method: u-boot

  armel-device: &armel-device
    <<: *arm64-device
    arch: armel

  baseline: &baseline-job
    template: baseline.jinja2
    kind: test

  checkout: &checkout-event
    channel: node
    name: checkout
    state: available

  build-k8s-all: &build-k8s-all
    event: *checkout-event
    runtime:
      name: k8s-all

  kbuild: &kbuild-job
    template: kbuild.jinja2
    kind: kbuild

  kbuild-gcc-10-arm64: &kbuild-gcc-10-arm64-job
    <<: *kbuild-job
    image: kernelci/staging-gcc-10:arm64-kselftest-kernelci
    params: &kbuild-gcc-10-arm64-params
      arch: arm64
      compiler: gcc-10
      cross_compile: 'aarch64-linux-gnu-'
      defconfig: defconfig

  kbuild-gcc-10-x86: &kbuild-gcc-10-x86-job
    <<: *kbuild-job
    image: kernelci/staging-gcc-10:x86-kselftest-kernelci
    params: &kbuild-gcc-10-x86-params
      arch: x86_64
      compiler: gcc-10
      defconfig: x86_64_defconfig

  x86_64-device: &x86_64-device
    arch: x86_64
    boot_method: grub
    mach: x86

api:

  docker-host:
    url: http://172.17.0.1:8001

  staging:
    url: https://staging.kernelci.org:9000

  early-access:
    url: https://kernelci-api.eastus.cloudapp.azure.com

  k8s-host:
    url: http://kernelci-api:8001


storage:

  docker-host:
    storage_type: ssh
    host: 172.17.0.1
    port: 8022
    base_url: http://172.17.0.1:8002/

  staging:
    storage_type: ssh
    host: staging.kernelci.org
    port: 9022
    base_url: http://storage.staging.kernelci.org/api/

  k8s-host:
    storage_type: ssh
    host: kernelci-api-ssh
    port: 8022
    base_url: http://kernelci-api-storage:8002/

  staging-azure: &azure-files
    storage_type: azure
    base_url: https://kciapistagingstorage1.file.core.windows.net/
    share: staging
    sas_public_token: "?sv=2022-11-02&ss=f&srt=sco&sp=r&se=2024-10-17T19:19:12Z&st=2023-10-17T11:19:12Z&spr=https&sig=sLmFlvZHXRrZsSGubsDUIvTiv%2BtzgDq6vALfkrtWnv8%3D"

  early-access-azure:
    <<: *azure-files
    share: early-access

runtimes:

  docker:
    lab_type: docker
    env_file: '/home/kernelci/.docker-env'
    user: 'root'  # Docker-in-Docker
    volumes:
      # Note: Absolute paths on the host are required here
      - 'data/ssh/:/home/kernelci/data/ssh'
      - 'data/output/:/home/kernelci/data/output'

  k8s-gke-eu-west4:
    lab_type: kubernetes
    context: 'gke_android-kernelci-external_europe-west4-c_kci-eu-west4'

  k8s-all:
    lab_type: kubernetes
    context:
      - 'aks-kbuild-medium-1'

  lava-broonie:
    lab_type: lava
    url: 'https://lava.sirena.org.uk/'
    priority_min: 10
    priority_max: 40
    notify:
      callback:
        token: kernelci-new-api-callback
        url: https://staging.kernelci.org:9100

  lava-collabora: &lava-collabora-staging
    lab_type: lava
    url: https://lava.collabora.dev/
    priority_min: 40
    priority_max: 60
    notify:
      callback:
        token: kernelci-api-token-staging
        url: https://staging.kernelci.org:9100

  # ToDo: avoid creating a separate Runtime entry
  # https://github.com/kernelci/kernelci-core/issues/2088
  lava-collabora-early-access:
    <<: *lava-collabora-staging
    notify:
      callback:
        token: kernelci-api-token-early-access
        url: https://staging.kernelci.org:9100

  lava-collabora-staging:
    lab_type: lava
    url: https://staging.lava.collabora.dev/
    priority_min: 40
    priority_max: 60
    notify:
      callback:
        token: kernelci-api-token-lava-staging
        url: https://staging.kernelci.org:9100

  shell:
    lab_type: shell


jobs:

  # FIXME This will need to be reworked later when the fstests scheduler has
  # been removed
  #
  # fstests:
  #   template: 'fstests.jinja2'
  #   image: 'kernelci/staging-kernelci'

  baseline-arm64: *baseline-job
  baseline-arm64-broonie: *baseline-job
  baseline-armel: *baseline-job
  baseline-x86: *baseline-job

  kbuild-gcc-10-arm64:
    <<: *kbuild-gcc-10-arm64-job

  kbuild-gcc-10-armel:
    <<: *kbuild-job
    image: kernelci/staging-gcc-10:arm64-kselftest-kernelci
    params:
      arch: arm
      compiler: gcc-10
      cross_compile: 'arm-linux-gnueabihf-'
      defconfig: multi_v7_defconfig

  kbuild-gcc-10-i386:
    <<: *kbuild-job
    image: kernelci/staging-gcc-10:x86-kselftest-kernelci
    params:
      arch: i386
      compiler: gcc-10
      defconfig: i386_defconfig

  kbuild-gcc-10-riscv:
    <<: *kbuild-job
    image: kernelci/staging-gcc-10:riscv64-kselftest-kernelci
    params:
      arch: riscv
      compiler: gcc-10
      cross_compile: 'riscv64-linux-gnu-'
      defconfig: defconfig

  kbuild-gcc-10-x86:
    <<: *kbuild-gcc-10-x86-job

  kunit: &kunit-job
    template: kunit.jinja2
    kind: test
    image: kernelci/staging-gcc-10:x86-kunit-kernelci

  kunit-x86_64:
    <<: *kunit-job
    params:
      arch: x86_64

  kver:
    template: kver.jinja2
    kind: test
    image: kernelci/staging-kernelci

  kselftest-dt:
    template: kselftest.jinja2
    kind: test
    params:
      collections: dt
      job_timeout: 10


trees:

  kernelci:
    url: "https://github.com/kernelci/linux.git"

  mainline:
    url: 'https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git'

  stable-rc:
    url: 'https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable-rc.git'

  next:
    url: 'https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git'

  mediatek:
    url: 'https://git.kernel.org/pub/scm/linux/kernel/git/mediatek/linux.git'

platforms:

  docker:

  qemu-x86:
    base_name: qemu
    arch: x86_64
    boot_method: qemu
    mach: qemu
    context:
      arch: x86_64
      cpu: qemu64
      guestfs_interface: ide

  minnowboard-turbot-E3826: *x86_64-device
  aaeon-UPN-EHLX4RE-A10-0864: *x86_64-device

  bcm2711-rpi-4-b:
    <<: *arm64-device
    mach: broadcom
    dtb: dtbs/broadcom/bcm2711-rpi-4-b.dtb

  bcm2836-rpi-2-b:
    <<: *armel-device
    mach: broadcom
    dtb: dtbs/bcm2836-rpi-2-b.dtb

  imx6q-sabrelite:
    <<: *armel-device
    mach: imx
    dtb: dtbs/imx6q-sabrelite.dtb

  sun50i-h5-libretech-all-h3-cc:
    <<: *arm64-device
    mach: allwinner
    dtb: dtbs/allwinner/sun50i-h5-libretech-all-h3-cc.dtb

  meson-g12b-a311d-khadas-vim3:
    <<: *arm64-device
    mach: amlogic
    dtb: dtbs/amlogic/meson-g12b-a311d-khadas-vim3.dtb

  odroid-xu3:
    <<: *armel-device
    mach: samsung
    dtb: dtbs/exynos5422-odroidxu3.dtb

  rk3288-rock2-square:
    <<: *armel-device
    mach: rockchip
    dtb: dtbs/rk3288-rock2-square.dtb

  rk3288-veyron-jaq:
    <<: *armel-device
    boot_method: depthcharge
    mach: rockchip
    dtb: dtbs/rk3288-veyron-jaq.dtb

  rk3399-gru-kevin:
    <<: *arm64-device
    boot_method: depthcharge
    mach: rockchip
    dtb: dtbs/rockchip/rk3399-gru-kevin.dtb

  rk3399-rock-pi-4b:
    <<: *arm64-device
    mach: rockchip
    dtb: dtbs/rockchip/rk3399-rock-pi-4b.dtb

  rk3588-rock-5b:
    <<: *arm64-device
    mach: rockchip
    dtb: dtbs/rockchip/rk3588-rock-5b.dtb

  sun50i-h6-pine-h64:
    <<: *arm64-device
    mach: allwinner
    dtb: dtbs/allwinner/sun50i-h6-pine-h64.dtb

  kubernetes:

  shell:


scheduler:

  - job: baseline-arm64
    event:
      channel: node
      name: kbuild-gcc-10-arm64
      result: pass
    runtime:
      type: lava
      name: lava-collabora
    platforms:
      - bcm2711-rpi-4-b
      - meson-g12b-a311d-khadas-vim3
      - rk3399-gru-kevin
      - rk3399-rock-pi-4b
      - rk3588-rock-5b
      - sun50i-h6-pine-h64

  - job: baseline-arm64-broonie
    event:
      channel: node
      name: kbuild-gcc-10-arm64
      result: pass
    runtime:
      type: lava
      name: lava-broonie
    platforms:
      - sun50i-h5-libretech-all-h3-cc

  - job: baseline-armel
    event:
      channel: node
      name: kbuild-gcc-10-armel
      result: pass
    runtime:
      type: lava
      name: lava-collabora
    platforms:
      - bcm2836-rpi-2-b
      - imx6q-sabrelite
      - odroid-xu3
      - rk3288-rock2-square
      - rk3288-veyron-jaq

  - job: baseline-x86
    event:
      channel: node
      name: kbuild-gcc-10-x86
      result: pass
    runtime:
      type: lava
      name: lava-collabora
    platforms:
      - qemu-x86
      - minnowboard-turbot-E3826

  - job: kbuild-gcc-10-arm64
    <<: *build-k8s-all

  - job: kbuild-gcc-10-armel
    <<: *build-k8s-all

  - job: kbuild-gcc-10-i386
    <<: *build-k8s-all

  - job: kbuild-gcc-10-riscv
    <<: *build-k8s-all

  - job: kbuild-gcc-10-x86
    <<: *build-k8s-all

  - job: kunit
    event: *checkout-event
    runtime:
      type: docker

  - job: kunit-x86_64
    event: *checkout-event
    runtime:
      name: k8s-gke-eu-west4

  - job: kver
    event: *checkout-event
    runtime:
      type: shell

  - job: kselftest-dt
    event:
      channel: node
      name: kbuild-gcc-10-arm64
      result: pass
    runtime:
      type: lava
      name: lava-collabora
    platforms:
      - bcm2711-rpi-4-b

# -----------------------------------------------------------------------------
# Legacy configuration data (still used by trigger service)
#

build_environments:

  gcc-10:
    cc: gcc
    cc_version: 10
    arch_params:
      armel:
        name: 'arm'
      x86_64:
        name: 'x86'


build_variants:
  variants: &build-variants
    gcc-10:
      build_environment: gcc-10
      architectures:
        x86_64:
          base_defconfig: 'x86_64_defconfig'
          filters:
            - regex: { defconfig: 'x86_64_defconfig' }
        arm64:
          base_defconfig: 'defconfig'
          filters:
            - regex: { defconfig: 'defconfig' }
        armel:
          base_defconfig: 'multi_v7_defconfig'
          filters:
            - regex: { defconfig: 'multi_v7_defconfig' }


build_configs:

  kernelci_staging-mainline:
    tree: kernelci
    branch: 'staging-mainline'
    variants: *build-variants

  kernelci_staging-next:
    tree: kernelci
    branch: 'staging-next'
    variants: *build-variants

  kernelci_staging-stable:
    tree: kernelci
    branch: 'staging-stable'
    variants: *build-variants

  mainline:
    tree: mainline
    branch: 'master'
    variants: *build-variants

  stable-rc_4.19: &stable-rc
    tree: stable-rc
    branch: 'linux-4.19.y'
    variants: *build-variants

  stable-rc_5.4:
    <<: *stable-rc
    branch: 'linux-5.4.y'

  stable-rc_5.10:
    <<: *stable-rc
    branch: 'linux-5.10.y'

  stable-rc_5.15:
    <<: *stable-rc
    branch: 'linux-5.15.y'

  stable-rc_6.1:
    <<: *stable-rc
    branch: 'linux-6.1.y'

  stable-rc_6.6:
    <<: *stable-rc
    branch: 'linux-6.6.y'

  stable-rc_6.7:
    <<: *stable-rc
    branch: 'linux-6.7.y'

  next_master:
    tree: next
    branch: 'master'
    variants: *build-variants

  mediatek_for_next:
    tree: mediatek
    branch: 'for-next'
    variants: *build-variants
