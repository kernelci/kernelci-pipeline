# SPDX-License-Identifier: LGPL-2.1-or-later

# List of report presets
#
# Each item defines a report preset containing a set of search
# parameters and values.

# Each report preset must include a "metadata" section and a "preset"
# section. The "metadata" section is expected to contain at least the
# "action" to be performed ("summary" or "monitor") and the "template"
# file used for the summary generation. This template must be a file in
# config/result_summary_templates. Other optional fields are supported:
#
#  - "output_file": name of the file where the output will be stored (in
#    data/output)
#  - "title": title for the report
#
# The "preset" section contains the query definition.

# Inside each preset section, top level blocks define the 'kind' of
# result to search for, ie. test, kbuild, regression.
# The dict of items in each block specifies the query parameters:
#     {query_parameter: value}
# The query parameter may include suffixes like __gt, __lt or __re to
# search for values "greater than", "lesser than" or a regexp text
# match.

# Example, <default-test> preset. Searches for dmesg baseline tests for
# arm64 in two repo trees, and also for all results for tests whose name
# contains "mytest", and generates a summary:
#
# default-test:
#   metadata:
#     action: summary
#     title: "Example test report"
#     template: "mytemplate.jinja2"
#     output_file: "default-test.txt"
#  preset:
#    test:
#      # Query by group, name, arch and list of repos
#      - group__re: baseline
#        name: dmesg
#        data.arch: arm64
#        repos:
#          - tree: stable-rc
#            branch: linux-5.4.y
#          - tree: stable-rc
#            branch: linux-5.15.y
#          - tree: mytree
#      # Query by name
#      - name_re: mytest


### Monitor presets

# Monitor active stable-rc kernel build regressions
# This will generate a report each time a new regression is detected or
# when an existing regression is updated (ie. the test case has failed
# again)
monitor-active-stable-rc-build-regressions:
  metadata:
    action: monitor
    title: "<strong>stable-rc</strong> kernel build regression"
    template: "generic-regression-report.html.jinja2"
    output_file: "stable-rc-build-regression-report.html"
  preset:
    regression:
      - name__re: kbuild
        # Regressions with result = fail are "active", ie. still failing
        result: fail
        repos:
          - tree: stable-rc

# Monitor all stable-rc kernel kbuild failures
monitor-stable-rc-build-failures:
  metadata:
    action: monitor
    title: "<strong>stable-rc</strong> kernel build failure"
    template: "generic-test-failure-report.html.jinja2"
    output_file: "stable-rc-build-failure.html"
  preset:
    kbuild:
      - result: fail
        repos:
          - tree: stable-rc

# Monitor active stable-rc kernel boot regressions
monitor-active-stable-rc-boot-regressions:
  metadata:
    action: monitor
    title: "<strong>stable-rc</strong> kernel boot regression"
    template: "generic-regression-report.html.jinja2"
    output_file: "stable-rc-boot-regression-report.html"
  preset:
    regression:
      - group__re: baseline
        # Regressions with result = fail are "active", ie. still failing
        result: fail
        repos:
          - tree: stable-rc

monitor-all-regressions:
  metadata:
    action: monitor
    title: "KernelCI regression report"
    template: "generic-regression-report.html.jinja2"
    output_file: "regression-report.html"
  preset:
    regression:
      - data.error_code: null

monitor-all-regressions__runtime-errors:
  metadata:
    action: monitor
    title: "KernelCI regression report"
    template: "generic-regression-report.html.jinja2"
    output_file: "regression-report.html"
  preset:
    regression:
      - data.error_code__ne: null

monitor-all-test-failures__runtime-errors:
  metadata:
    action: monitor
    title: "KernelCI test failure report"
    template: "generic-test-failure-report.html.jinja2"
    output_file: "test-failure-report.html"
  preset:
    test:
      - result: fail
        data.error_code__ne: null

monitor-all-test-failures:
  metadata:
    action: monitor
    title: "KernelCI test failure report"
    template: "generic-test-failure-report.html.jinja2"
    output_file: "test-failure-report.html"
  preset:
    test:
      - result: fail
        data.error_code: null

monitor-all-build-failures__runtime-errors:
  metadata:
    action: monitor
    title: "KernelCI kbuild failure report"
    template: "generic-test-failure-report.html.jinja2"
    output_file: "kbuild-failure-report.html"
  preset:
    kbuild:
      - result: fail
        data.error_code__ne: null

monitor-all-build-failures:
  metadata:
    action: monitor
    title: "KernelCI kbuild failure report"
    template: "generic-test-failure-report.html.jinja2"
    output_file: "kbuild-failure-report.html"
  preset:
    kbuild:
      - result: fail
        data.error_code: null

aferraris-monitor-chromeos-errors:
  metadata:
    action: monitor
    title: "KernelCI test failure caused by ChromeOS boot errors"
    template: "generic-test-failure-report.html.jinja2"
    output_file: "test-chromeos-boot-error-report.html"
  preset:
    test:
      - result: fail
        data.error_msg__re: "(self_repair|cros-partition-corrupt)"

#### Failures and regressions in mainline and next for x86_64

monitor-build-regressions-x86_64-mainline-next:
  metadata:
    action: monitor
    title: "KernelCI build regressions found on mainline and next for x86_64"
    template: "generic-regression-report.html.jinja2"
    output_file: "build-regressions-mainline-next-x86_64.html"
  preset:
    regression:
      - data.error_code: null
        name__re: kbuild
        data.arch: x86_64
        repos:
          - tree: mainline
          - tree: next

monitor-build-failures-x86_64-mainline-next:
  metadata:
    action: monitor
    title: "KernelCI build failures found on mainline and next for x86_64"
    template: "generic-test-failure-report.html.jinja2"
    output_file: "build-failures-mainline-next-x86_64.html"
  preset:
    kbuild:
      - data.error_code: null
        result: fail
        data.arch: x86_64
        repos:
          - tree: mainline
          - tree: next

monitor-baseline-regressions-x86_64-mainline-next:
  metadata:
    action: monitor
    title: "KernelCI baseline regressions found on mainline and next for x86_64"
    template: "generic-regression-report.html.jinja2"
    output_file: "baseline-regressions-mainline-next-x86_64.html"
  preset:
    regression:
      - data.error_code: null
        group__re: baseline
        data.arch: x86_64
        repos:
          - tree: mainline
          - tree: next

monitor-baseline-failures-x86_64-mainline-next:
  metadata:
    action: monitor
    title: "KernelCI baseline failures found on mainline and next for x86_64"
    template: "generic-test-failure-report.html.jinja2"
    output_file: "baseline-failures-mainline-next-x86_64.html"
  preset:
    test:
      - data.error_code: null
        result: fail
        group__re: baseline
        data.arch: x86_64
        repos:
          - tree: mainline
          - tree: next


#### Failures and regressions in kselftest-acpi tests in collabora-next

monitor-kselftest-acpi-regressions-collabora-next:
  metadata:
    action: monitor
    title: "KernelCI kselftest-acpi regressions found on collabora-next"
    template: "generic-regression-report.html.jinja2"
    output_file: "kselftest-acpi-regressions-collabora-next.html"
  preset:
    regression:
      - data.error_code: null
        name: kselftest-acpi
        repos:
          - tree: collabora-next

monitor-kselftest-acpi-failures-collabora-next:
  metadata:
    action: monitor
    title: "KernelCI kselftest-acpi failures found on collabora-next"
    template: "generic-regression-report.html.jinja2"
    output_file: "kselftest-acpi-regressions-collabora-next.html"
  preset:
    test:
      - data.error_code: null
        result: fail
        name: kselftest-acpi
        repos:
          - tree: collabora-next


#### Failures and regressions in mainline and next for arm64

monitor-build-regressions-arm64-mainline-next:
  metadata:
    action: monitor
    title: "KernelCI build regressions found on mainline and next for arm64"
    template: "generic-regression-report.html.jinja2"
    output_file: "build-regressions-mainline-next-arm64.html"
  preset:
    regression:
      - data.error_code: null
        name__re: kbuild
        data.arch: arm64
        repos:
          - tree: mainline
          - tree: next

monitor-build-failures-arm64-mainline-next:
  metadata:
    action: monitor
    title: "KernelCI build failures found on mainline and next for arm64"
    template: "generic-test-failure-report.html.jinja2"
    output_file: "build-failures-mainline-next-arm64.html"
  preset:
    kbuild:
      - data.error_code: null
        result: fail
        data.arch: arm64
        repos:
          - tree: mainline
          - tree: next

monitor-baseline-regressions-arm64-mainline-next:
  metadata:
    action: monitor
    title: "KernelCI baseline regressions found on mainline and next for arm64"
    template: "generic-regression-report.html.jinja2"
    output_file: "baseline-regressions-mainline-next-arm64.html"
  preset:
    regression:
      - data.error_code: null
        group__re: baseline
        data.arch: arm64
        repos:
          - tree: mainline
          - tree: next

monitor-baseline-failures-arm64-mainline-next:
  metadata:
    action: monitor
    title: "KernelCI baseline failures found on mainline and next for arm64"
    template: "generic-test-failure-report.html.jinja2"
    output_file: "baseline-failures-mainline-next-arm64.html"
  preset:
    test:
      - data.error_code: null
        result: fail
        group__re: baseline
        data.arch: arm64
        repos:
          - tree: mainline
          - tree: next


#### Failures and regressions in kselftest-dt tests in mainline and next

monitor-kselftest-dt-regressions-mainline-next:
  metadata:
    action: monitor
    title: "KernelCI kselftest-dt regressions found on mainline and next"
    template: "generic-regression-report.html.jinja2"
    output_file: "kselftest-dt-regressions-mainline-next.html"
  preset:
    regression:
      - data.error_code: null
        name: kselftest-dt
        repos:
          - tree: mainline
          - tree: next

monitor-kselftest-dt-failures-mainline-next:
  metadata:
    action: monitor
    title: "KernelCI kselftest-dt failures found on mainline and next"
    template: "generic-regression-report.html.jinja2"
    output_file: "kselftest-dt-regressions-mainline-next.html"
  preset:
    test:
      - data.error_code: null
        result: fail
        name: kselftest-dt
        repos:
          - tree: mainline
          - tree: next


# All kunit test failures
monitor-all-kunit-failures:
  metadata:
    action: monitor
    title: "All kunit test failures not caused by runtime errors"
    template: "generic-test-failures.html.jinja2"
    output_file: "kunit-failures.html"
    #template: "generic-test-failure-report.jinja2"
    #output_file: "kunit-failures.txt"
  preset:
    test:
      - group__re: kunit
        result: fail
        data.error_code: null


### Summary presets

# New stable-rc kernel build regressions
stable-rc-build-regressions:
  metadata:
    action: summary
    title: "<strong>stable-rc</strong> kernel build regressions"
    template: "generic-regressions.html.jinja2"
    output_file: "stable-rc-build-regressions.html"
  preset:
    regression:
      - name__re: kbuild
        repos:
          - tree: stable-rc

# All active stable-rc kernel build regressions
active-stable-rc-build-regressions:
  metadata:
    action: summary
    title: "<strong>stable-rc</strong> kernel build regressions"
    template: "generic-regressions.html.jinja2"
    output_file: "active-stable-rc-build-regressions.html"
  preset:
    regression:
      - name__re: kbuild
        # Regressions with result = fail are "active", ie. still failing
        result: fail
        repos:
          - tree: stable-rc

# stable-rc kernel build failures
stable-rc-build-failures:
  metadata:
    action: summary
    title: "<strong>stable-rc</strong> kernel build failures"
    template: "generic-test-failures.html.jinja2"
    output_file: "stable-rc-build-failures.html"
  preset:
    kbuild:
      - result: fail
        repos:
          - tree: stable-rc

# stable-rc kernel boot regressions
stable-rc-boot-regressions:
  metadata:
    action: summary
    title: "<strong>stable-rc</strong> kernel boot regressions"
    template: "generic-regressions.html.jinja2"
    output_file: "stable-rc-boot-regressions.html"
  preset:
    regression:
      - group__re: baseline
        repos:
          - tree: stable-rc

# stable-rc kernel boot active regressions
stable-rc-boot-active-regressions:
  metadata:
    action: summary
    title: "<strong>stable-rc</strong> kernel boot regressions"
    template: "generic-regressions.html.jinja2"
    output_file: "stable-rc-boot-regressions.html"
  preset:
    regression:
      - group__re: baseline
        # Regressions with result = fail are "active", ie. still failing
        result: fail
        repos:
          - tree: stable-rc

# stable-rc kernel boot failures
stable-rc-boot-failures:
  metadata:
    action: summary
    title: "<strong>stable-rc</strong> kernel boot failures"
    template: "generic-test-failures.html.jinja2"
    output_file: "stable-rc-boot-failures.html"
  preset:
    test:
      - group__re: baseline
        result: fail
        repos:
          - tree: stable-rc

# tast test failures
tast-failures:
  metadata:
    action: summary
    title: "General Tast test failures"
    template: "generic-test-failures.html.jinja2"
    output_file: "tast-failures.html"
  preset:
    test:
      - group__re: tast
        name__ne: tast
        result: fail
        data.error_code: null

# tast test failures
tast-failures__runtime-errors:
  metadata:
    action: summary
    title: "General Tast test failures"
    template: "generic-test-failures.html.jinja2"
    output_file: "tast-failures.html"
  preset:
    test:
      - group__re: tast
        name__ne: tast
        result: fail
        data.error_code__ne: null

# General regressions (kbuilds and all tests) on mainline and next
# excluding those triggered by runtime errors
mainline-next-regressions:
  metadata:
    action: summary
    title: "Regressions found in mainline and next"
    template: "generic-regressions.html.jinja2"
    output_file: "mainline-next-regressions.html"
  preset:
    regression:
      - data.error_code: null
        repos:
          - tree: mainline
          - tree: next

mainline-next-test-failures:
  metadata:
    action: summary
    title: "Test failures found in mainline and next"
    template: "generic-test-failures.html.jinja2"
    output_file: "mainline-next-failures.html"
  preset:
    test:
      - result: fail
        data.error_code: null
        repos:
          - tree: mainline
          - tree: next

# General regressions (kbuilds and all tests) on mainline and next
# excluding those triggered by runtime errors
mainline-next-active-regressions:
  metadata:
    action: summary
    title: "Regressions found in mainline and next"
    template: "generic-regressions.html.jinja2"
    output_file: "mainline-next-active-regressions.html"
  preset:
    regression:
      - data.error_code: null
        # Regressions with result = fail are "active", ie. still failing
        result: fail
        repos:
          - tree: mainline
          - tree: next

# General regressions (kbuilds and all tests) on mainline and next
# triggered by runtime errors
mainline-next-regressions__runtime-errors:
  metadata:
    action: summary
    title: "'Regressions' found in mainline and next due to runtime errors"
    template: "generic-regressions.html.jinja2"
    output_file: "mainline-next-regressions__runtime-errors.html"
  preset:
    regression:
      - data.error_code__ne: null
        repos:
          - tree: mainline
          - tree: next

# tast tests regressions for x86_64 targets
# Collect only regressions that aren't caused by runtime errors
tast-regressions-x86_64:
  metadata:
    action: summary
    title: "Regressions found on Tast tests for x86_64"
    template: "generic-regressions.html.jinja2"
    output_file: "tast-regressions-x86_64.html"
  preset:
    regression:
      - group__re: tast
        name__ne: tast
        data.arch: x86_64
        # Get only the regressions from results with no runtime errors
        data.error_code: null

# tast tests regressions for x86_64 targets caused by runtime errors
tast-regressions-x86_64__runtime-errors:
  metadata:
    action: summary
    title: "'Regressions' found on Tast tests for x86_64 due to runtime errors"
    template: "generic-regressions.html.jinja2"
    output_file: "tast-regressions-x86_64__runtime-errors.html"
  preset:
    regression:
      - group__re: tast
        name__ne: tast
        data.arch: x86_64
        data.error_code__ne: null

# All active kunit regressions
active-kunit-regressions:
  metadata:
    action: summary
    title: "Active regressions found on kunit tests"
    template: "generic-regressions.html.jinja2"
    output_file: "kunit-regressions.html"
  preset:
    regression:
      - group__re: kunit
        result: fail
        data.error_code: null

# All kunit test failures
all-kunit-failures:
  metadata:
    action: summary
    title: "All kunit test failures"
    template: "generic-test-failures.html.jinja2"
    output_file: "kunit-failures.html"
  preset:
    test:
      - group__re: kunit
        result: fail
        data.error_code: null
