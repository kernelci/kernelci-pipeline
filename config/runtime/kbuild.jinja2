{# -*- mode: Python -*- -#}
{# SPDX-License-Identifier: LGPL-2.1-or-later -#}

{%- extends 'base/python.jinja2' %}

{%- block python_imports %}
{{ super() }}
{%- endblock %}

{%- block python_local_imports %}
{{ super() }}
from kernelci.kbuild import KBuild
import os
import sys
{%- endblock %}

{%- block python_globals %}
{{ super() }}
KBUILD_PARAMS = {
    'arch': '{{ arch }}',
    'compiler': '{{ compiler }}',
    'defconfig': 
{%- if defconfig is string %}
    '{{ defconfig }}'
{%- elif defconfig %}
    [
    {%- for item in defconfig %}
        '{{ item }}'
        {%- if not loop.last %}, {% endif %}
    {%- endfor %}
    ]   
{%- endif %},
{%- if fragments %}
    'fragments': {{ fragments }},
{%- else %}
    'fragments': [],
{%- endif %}
{%- if cross_compile %}
    'cross_compile': '{{ cross_compile }}',
{%- endif %}
{%- if cross_compile_compat %}
    'cross_compile_compat': '{{ cross_compile_compat }}'
{%- endif %}
{%- if disable_modules %}
    'disable_modules': {{ disable_modules }}
{%- endif %}
{%- if dtbs_check %}
    'dtbs_check': '{{ dtbs_check }}'
{%- endif %}
}
{%- endblock %}

{% block python_job -%}

WORKSPACE = '/tmp/kci'

def main(args):
    build = KBuild(node=NODE, jobname=JOB_NAME, params=KBUILD_PARAMS, apiconfig=API_CONFIG_YAML)
    build.set_workspace(WORKSPACE)
    build.set_storage_config(STORAGE_CONFIG_YAML)
    build.write_script("build.sh")
    build.serialize("_build.json")
    r = os.system("bash -e build.sh")
    build2 = KBuild.from_json("_build.json")
    build2.verify_build()
    results = build2.submit(r)
    return results

{% endblock %}

{%- block python_main %}
if __name__ == '__main__':
    main(sys.argv)
    sys.exit(0)
{%- endblock %}
